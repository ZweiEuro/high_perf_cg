[gd_scene load_steps=6 format=3 uid="uid://e5ubdwu3wx6d"]

[sub_resource type="GDScript" id="GDScript_l0wnk"]
script/source = "extends Node3D

@export var triggerDuration_s: float = 1.0; # duration in seconds for it to grow
@export var singleFire: bool = false;

@export var actualScale: float = 1.0;

@onready var innerIndicator: CylinderMesh = $IndicatorInner.mesh
@onready var outerIndicator: CylinderMesh = $IndicatorOuter.mesh


var startTime: float = Time.get_ticks_msec() / 1000.0; # time since start in seconds 

var indicatorInnerSize: float = 0.0;

func _ready() -> void:
	self.scale = Vector3(actualScale, actualScale, actualScale);
	innerIndicator.top_radius = 1;
	innerIndicator.bottom_radius = 1;

func _process(_delta: float) -> void:
	var now = Time.get_ticks_msec() / 1000.0;
	if now - startTime > triggerDuration_s:
		startTime = now;
	
	var newSize = lerpf(0.0, 1.0, (( now - startTime) / triggerDuration_s))
	
	innerIndicator.bottom_radius = newSize;
	innerIndicator.top_radius = newSize;
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_lsk4n"]
transparency = 1
albedo_color = Color(1, 0, 0, 0.541176)
disable_receive_shadows = true

[sub_resource type="CylinderMesh" id="CylinderMesh_yurot"]
resource_local_to_scene = true
material = SubResource("StandardMaterial3D_lsk4n")
top_radius = 1.0
bottom_radius = 1.0
height = 0.001

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_6v3ml"]
transparency = 1
albedo_color = Color(1, 0, 0, 1)
disable_receive_shadows = true

[sub_resource type="CylinderMesh" id="CylinderMesh_e1imq"]
resource_local_to_scene = true
material = SubResource("StandardMaterial3D_6v3ml")
top_radius = 0.0
bottom_radius = 0.0
height = 0.001

[node name="Indicator" type="Node3D"]
script = SubResource("GDScript_l0wnk")

[node name="IndicatorOuter" type="MeshInstance3D" parent="."]
mesh = SubResource("CylinderMesh_yurot")

[node name="IndicatorInner" type="MeshInstance3D" parent="."]
mesh = SubResource("CylinderMesh_e1imq")
skeleton = NodePath("../IndicatorOuter")
